name: Build CleanerCS2 with XMake
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
            config: release
          - os: ubuntu-latest
            platform: linux
            arch: x64
            config: release
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.platform }}-${{ matrix.arch }}

    env:
      HL2SDKCS2: ${{ github.workspace }}/hl2sdk
      MMSOURCE112: ${{ github.workspace }}/metamod-source

    steps:
      - name: Checkout CleanerCS2
        uses: actions/checkout@v4
        with:
          path: cleaner-cs2
          submodules: recursive

      - name: Checkout HL2SDK-CS2
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk
          ref: 8e3da65bdf33e2dfb04ad57208e85ffc9e93c048
          path: hl2sdk
          submodules: recursive

      - name: Checkout Metamod-Source
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: master
          path: metamod-source
          submodules: recursive

      - name: Install XMake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Show system info
        run: |
          xmake --version
          echo "Working directory: $PWD"
          echo "HL2SDKCS2 path: $HL2SDKCS2"
          echo "MMSOURCE112 path: $MMSOURCE112"
          # 使用兼容的命令
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            Get-ChildItem -Path "$HL2SDKCS2" -Force
          else
            ls -la "$HL2SDKCS2"
          fi

      - name: Configure with XMake
        working-directory: cleaner-cs2
        run: |
          echo "Configuring for ${{ matrix.platform }}-${{ matrix.arch }}"
          # 移除不兼容的 --backup 参数
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            xmake f -p windows -a x64 -m release
          else
            xmake f -p linux -a x64 -m release
          fi

      - name: Build project
        working-directory: cleaner-cs2
        run: |
          echo "Building project..."
          xmake build -v

      - name: Verify build success
        working-directory: cleaner-cs2
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            if [ -f "build/windows/x64/release/CleanerCS2-Xmake.dll" ]; then
              echo "✓ DLL build successful"
              Get-ChildItem -Path "build/windows/x64/release" -Force
            else
              echo "✗ DLL build failed"
              Get-ChildItem -Path "build/windows/x64/release" -Force
              exit 1
            fi
          else
            if [ -f "build/linux/x86_64/release/libCleanerCS2-Xmake.so" ]; then
              echo "✓ SO build successful"
              ls -la "build/linux/x86_64/release"
            else
              echo "✗ SO build failed"
              ls -la "build/linux/x86_64/release"
              exit 1
            fi
          fi

      - name: Create package structure
        working-directory: cleaner-cs2
        run: |
          mkdir -p package
          # Copy the built library to package directory
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            if [ -f "build/windows/x64/release/CleanerCS2-Xmake.dll" ]; then
              cp "build/windows/x64/release/CleanerCS2-Xmake.dll" package/
            fi
          else
            if [ -f "build/linux/x86_64/release/libCleanerCS2-Xmake.so" ]; then
              cp "build/linux/x86_64/release/libCleanerCS2-Xmake.so" package/
            fi
          fi

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: cleaner-cs2-${{ matrix.platform }}-${{ matrix.arch }}-build
          path: |
            cleaner-cs2/package/**
            cleaner-cs2/build/**
          retention-days: 7

      - name: Upload source code
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: cleaner-cs2-source
          path: |
            cleaner-cs2/src/**
            cleaner-cs2/xmake.lua
            cleaner-cs2/README.md
            cleaner-cs2/LICENSE
            cleaner-cs2/package/**
          retention-days: 7

      - name: Final verification
        if: success()
        working-directory: cleaner-cs2
        run: |
          echo "=== Build completed successfully ==="
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            Get-ChildItem -Path "package" -Recurse -Force
          else
            find package -type f
          fi
          echo "=================================="
