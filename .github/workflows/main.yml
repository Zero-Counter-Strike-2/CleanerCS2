name: Build CleanerCS2 with XMake
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
            config: release
          - os: ubuntu-latest
            platform: linux
            arch: x64
            config: release
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.platform }}-${{ matrix.arch }}
    timeout-minutes: 20  # 设置更长的超时时间

    env:
      HL2SDKCS2: ${{ github.workspace }}/hl2sdk
      MMSOURCE112: ${{ github.workspace }}/metamod-source

    steps:
      - name: Checkout CleanerCS2
        uses: actions/checkout@v4
        with:
          path: cleaner-cs2
          submodules: recursive

      - name: Checkout HL2SDK-CS2
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk
          ref: 8e3da65bdf33e2dfb04ad57208e85ffc9e93c048
          path: hl2sdk
          submodules: recursive

      - name: Checkout Metamod-Source
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: master
          path: metamod-source
          submodules: recursive

      - name: Install XMake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Show environment info
        run: |
          echo "=== Environment Info ==="
          xmake --version
          echo "RUNNER_OS: $env:RUNNER_OS"
          echo "PWD: $env:PWD"
          echo "HL2SDKCS2: $env:HL2SDKCS2"
          echo "MMSOURCE112: $env:MMSOURCE112"
          echo "========================"

      - name: Validate vendor libraries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (Test-Path "cleaner-cs2/vendor/funchook/lib/Release/funchook.lib") {
            echo "✓ funchook.lib found"
          } else {
            echo "✗ funchook.lib not found! Please commit it to your repo."
            exit 1
          }
          if (Test-Path "cleaner-cs2/vendor/funchook/lib/Release/distorm.lib") {
            echo "✓ distorm.lib found"
          } else {
            echo "✗ distorm.lib not found! Please commit it to your repo."
            exit 1
          }
        shell: powershell

      - name: Configure with XMake
        working-directory: cleaner-cs2
        run: |
          echo "Configuring for ${{ matrix.platform }}-${{ matrix.arch }}"
          xmake f -p ${{ matrix.platform }} -a ${{ matrix.arch }} -m ${{ matrix.config }}
        shell: powershell

      - name: Build project
        working-directory: cleaner-cs2
        run: |
          echo "Building project..."
          xmake build -vD  # 启用详细调试输出
        shell: powershell

      - name: Verify build success
        working-directory: cleaner-cs2
        run: |
          if ($env:RUNNER_OS -eq "Windows") {
            if (Test-Path "build/windows/x64/release/CleanerCS2-Xmake.dll") {
              echo "✓ DLL build successful"
              Get-ChildItem -Path "build/windows/x64/release" -Force
            } else {
              echo "✗ DLL build failed"
              dir "build/windows/x64/release" -Recurse
              exit 1
            }
          } else {
            if (Test-Path "build/linux/x86_64/release/libCleanerCS2-Xmake.so") {
              echo "✓ SO build successful"
              ls -la "build/linux/x86_64/release"
            } else {
              echo "✗ SO build failed"
              ls -la "build/linux/x86_64/release"
              exit 1
            }
          }
        shell: powershell

      - name: Create package structure
        working-directory: cleaner-cs2
        run: |
          mkdir -p package
          if ($env:RUNNER_OS -eq "Windows") {
            if (Test-Path "build/windows/x64/release/CleanerCS2-Xmake.dll") {
              cp "build/windows/x64/release/CleanerCS2-Xmake.dll" package/
            }
          } else {
            if (Test-Path "build/linux/x86_64/release/libCleanerCS2-Xmake.so") {
              cp "build/linux/x86_64/release/libCleanerCS2-Xmake.so" package/
            }
          }
        shell: powershell

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: cleaner-cs2-${{ matrix.platform }}-${{ matrix.arch }}-build
          path: |
            cleaner-cs2/package/**
            cleaner-cs2/build/**
          retention-days: 7

      - name: Upload source code
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: cleaner-cs2-source
          path: |
            cleaner-cs2/src/**
            cleaner-cs2/xmake.lua
            cleaner-cs2/README.md
            cleaner-cs2/LICENSE
          retention-days: 7
